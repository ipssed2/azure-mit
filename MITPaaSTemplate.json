{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualMachineSize": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },


    "mi_publicHostname": {
      "type": "string"
    },
    "mi_sysadminPassword": {
      "type": "securestring"
    },

    "mi_emailTo": {
      "type": "string"
    },
    "mi_emailFrom": {
      "type": "string"
    },
    "mi_smtpHost": {
      "type": "string"
    },
    "mi_smtpPort": {
      "type": "int"
    },
    "mi_smtpUsername": {
      "type": "string"
    },
    "mi_smtpPassword": {
      "type": "securestring"
    },

    "sqlserverAdminLoginPassword": {
      "type": "securestring"
    },

    "mitsqldatabaseEdition": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "mitsqldatabaseRequestedServiceObjectiveName": {
      "type": "string",
      "defaultValue": "S0",
      "allowedValues": [
        "Basic",
        "S0",
        "S1",
        "S2",
        "P1",
        "P2",
        "P3"
      ],
      "metadata": {
        "description": "Describes the performance level for Edition"
      }
    },
    "storageAccountFilesType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    }

  },
  "variables": {
    "virtualMachineName": "MOVEitTransfer",
    "virtualNetworkName": "vnet1",
    "networkInterfaceName": "nic1",
    "networkSecurityGroupName": "nsg1",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "subnet1",
    "subnetPrefix": "10.0.0.0/24",
    "sqlFirewallStart": "10.0.0.1",
    "sqlFirewallEnd": "10.0.0.254",
    "publicIpAddressName": "publicip1",
    "publicIpAddressType": "dynamic",
    "sqlServerName": "[concat('mitsqlserver', uniqueString(resourceGroup().id))]",
    "sqlserverAdminLogin": "sqladmin",
    "mitSqlDatabaseName": "mitsqldatabase",
    "mitsqldatabaseCollation": "SQL_Latin1_General_CP1_CI_AS",
    "storageAccountFilesName": "[concat('safiles', uniqueString(resourceGroup().id))]",
    "avMITName": "avsetMIT",
    "loadBalancerName": "mitLoadBalancer"
  },
  "resources": [
    {
      "name": "[variables('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySet', variables('avMITName'))]"
        },

        "osProfile": {
          "computerName": "[variables('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "id": "[resourceId('RGTest2', 'Microsoft.Compute/images','ImageTest2')]"
          },
          "osDisk": {
            "name": "[variables('virtualMachineName')]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        }
      }
    },
    {
      "name": "Microsoft.CustomScriptExtension-20170419173708",
      "apiVersion": "2015-01-01",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/ipsmad2/ips-azure/master/extensionTemplate.json"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "vmName": {
            "value": "[variables('virtualMachineName')]"
          },
          "mi_publicHostname": {
            "value": "[parameters('mi_publicHostname')]"
          },
          "mi_emailTo": {
            "value": "[parameters('mi_emailTo')]"
          },
          "mi_emailFrom": {
            "value": "[parameters('mi_emailFrom')]"
          },
          "mi_smtpHost": {
            "value": "[parameters('mi_smtpHost')]"
          },
          "mi_smtpPort": {
            "value": "[parameters('mi_smtpPort')]"
          },
          "mi_smtpUsername": {
            "value": "[parameters('mi_smtpUsername')]"
          },
          "mi_smtpPassword": {
            "value": "[parameters('mi_smtpPassword')]"
          },
          "mi_sysadminPassword": {
            "value": "[parameters('mi_sysadminPassword')]"
          },
          "fileUris": {
            "value": "https://raw.githubusercontent.com/Hugos-MSFT/azure-arm-templates/master/Samples/bootstrap/bootScript.ps1"
          }

        }
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]"
      ]
    },
    {
      "name": "[variables('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2016-12-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('networkInterfaceName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', concat(variables('virtualNetworkName')), '/subnets/', variables('subnetName'))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'), '/backendAddressPools/BackEnd'))]"
                },
                {
                  "loadBalancerInboundNatRules": [
                    {
                      "id": "[resourceId('Microsoft.Network/loadBalancers', concat(variables('loadBalancerName'), '/inboundNatRules/machine1'))]"
                    }
                  ]
                }
              ]

            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "name": "[variables('publicIpAddressName')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
      }
    },
    {
      "name": "[variables('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "3389",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "HTTP-In",
            "properties": {
              "priority": 1010,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "80",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "HTTPS-In",
            "properties": {
              "priority": 1020,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "443",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "SSH-In",
            "properties": {
              "priority": 1030,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "22",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "FTP-In",
            "properties": {
              "priority": 1040,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "21",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "FTP-Implicit-In",
            "properties": {
              "priority": 1050,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "990",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "FTP-Data-In",
            "properties": {
              "priority": 1060,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "3000-3100",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "FTP-Explicit-CC-In",
            "properties": {
              "priority": 1070,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "10021",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "FTP-Implicit-CC-In",
            "properties": {
              "priority": 1080,
              "sourceAddressPrefix": "*",
              "protocol": "Tcp",
              "destinationPortRange": "10990",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }

        ]
      }
    },
    {
      "name": "[variables('sqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01-preview",
      "dependsOn": [],
      "tags": {
        "displayName": "MIT SQL Server"
      },
      "properties": {
        "administratorLogin": "[variables('sqlserverAdminLogin')]",
        "administratorLoginPassword": "[parameters('sqlserverAdminLoginPassword')]"
      },
      "resources": [
        {
          "name": "AllowMITPublicIp",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
          ],
          "properties": {
            "startIpAddress": "[reference(resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))).ipAddress]",
            "endIpAddress": "[reference(resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))).ipAddress]"
          }
        },
        {
          "name": "[variables('mitSqlDatabaseName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
          ],
          "tags": {
            "displayName": "MIT SQL Database"
          },
          "properties": {
            "collation": "[variables('mitsqldatabaseCollation')]",
            "edition": "[parameters('mitsqldatabaseEdition')]",
            "maxSizeBytes": "214748364800",
            "requestedServiceObjectiveName": "[parameters('mitsqldatabaseRequestedServiceObjectiveName')]"
          },
          "resources": [
            {
              "comments": "Transparent Data Encryption",
              "name": "current",
              "type": "transparentDataEncryption",
              "apiVersion": "2014-04-01-preview",
              "properties": {
                "status": "Enabled"
              },
              "dependsOn": [
                "[variables('mitSqlDatabaseName')]"
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "[variables('storageAccountFilesName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('storageAccountFilesType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "storageAccountFiles"
      },
      "kind": "Storage"
    },
    {
      "name": "[variables('avMITName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "avsetMIT"
      },
      "properties": {
        "platformUpdateDomainCount": 1,
        "platformFaultDomainCount": 1
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "LoadBalancer"
      },
      "dependsOn": [
        "[variables('virtualNetworkName')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', concat(variables('virtualNetworkName'), '/subnets/', variables('subnetName')))]"
              },
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
              }
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool"
          }
        ],
        "inboundNatRules": [
          {
            "name": "machine1",
            "properties": {
              "backendPort": 13389,
              "frontendPort": 3389,
              "protocol": "Tcp",
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontEndIpConfigurations/loadBalancerFrontEnd')]"
              }
            }
          }
        ],

        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "idleTimeoutInMinutes": 15
            },
            "name": "HTTP"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "idleTimeoutInMinutes": 15
            },
            "name": "HTTPS"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 21,
              "backendPort": 21,
              "idleTimeoutInMinutes": 150
            },
            "name": "FTP"
          },
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 990,
              "backendPort": 990,
              "idleTimeoutInMinutes": 150
            },
            "name": "FTP-Implicit"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    }

  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "sqlDatabaseFQDN": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Sql/servers', variables('sqlServerName'))).fullyQualifiedDomainName]"
    }

  }
}